export interface ActivityType {
    title: HTMLElement | string;
    date: Date | string;
    src: string;
    alt: string;
    text?: string | HTMLElement | undefined;
}
type AlignType = "text-center" | "text-left" | "text-right";
export interface AuthFieldType {
    label: string;
    fieldtype: string;
    required?: boolean | undefined;
    placeholder?: string | undefined;
}
type AuthFunctionType = () => Promise<void>;
type ButtonType = "reset" | "submit" | "button";
type Buttontypes = "red" | "yellow" | "green" | "purple" | "blue" | "light" | "dark" | "blue-outline" | "dark-outline" | "green-outline" | "red-outline" | "yellow-outline" | "purple-outline";
type Buttonshadows = "red" | "green" | "purple" | "pink" | "blue" | "cyan" | "teal" | "lime";
type CarouselIconType = {
    next: typeof SvelteComponentDev;
    prev: typeof SvelteComponentDev;
};
export interface CheckboxType {
    id: string;
    label: string;
    checked?: boolean | undefined;
    disabled?: boolean | undefined;
    helper?: string | undefined;
}
type Colors = "gray" | "red" | "yellow" | "green" | "indigo" | "purple" | "pink" | "blue" | "white" | "custom";
export interface DotType {
    top?: boolean | undefined;
    color?: string | undefined;
}
export interface drawerTransitionParamTypes {
    amount?: number | undefined;
    delay?: number | undefined;
    duration?: number | undefined;
    easing?: ((t: number) => number) | undefined;
    opacity?: number | undefined;
    x?: number | undefined;
    y?: number | undefined;
}
type drawerTransitionTypes = "blur" | "fade" | "fly" | "slide" | "in:fly" | "out:fly" | "in:slide" | "out:slide" | "in:fade" | "out:fade" | "in:blur" | "out:blur" | undefined;
export interface DropdownType {
    name: string;
    href: string;
    divider?: boolean | undefined;
}
type FormColorType = "red" | "yellow" | "green" | "purple" | "blue" | "teal" | "orange";
type Gradientduotones = "purple2blue" | "cyan2blue" | "green2blue" | "purple2pink" | "pink2orange" | "teal2lime" | "red2yellow";
export interface GroupTimelineType {
    title: string | HTMLElement;
    src: string;
    alt: string;
    href?: string | undefined;
    isPrivate?: boolean | undefined;
    comment?: string | HTMLElement | undefined;
}
export interface IconType {
    name: typeof SvelteComponent;
    size?: number | undefined;
    color?: Colors | undefined;
    class?: string | undefined;
}
export interface IconTabType {
    name: typeof SvelteComponent;
    active: boolean;
    href: string;
    rel?: string | undefined;
    icon?: typeof SvelteComponent | undefined;
    iconSize?: number | undefined;
}
type ImgType = {
    src: string;
    alt?: string | undefined;
};
type InputType = "number" | "reset" | "submit" | "color" | "date" | "datetime-local" | "email" | "file" | "hidden" | "image" | "month" | "password" | "tel" | "text" | "time" | "url" | "week" | "search";
export interface InteractiveTabType {
    name: string;
    id: number;
    active?: boolean | undefined;
    disabled?: boolean | undefined;
    icon?: typeof SvelteComponent | undefined;
    iconSize?: number | undefined;
    content: string | typeof SvelteComponent;
}
export interface ListGroupItemType {
    [propName: string]: any;
    current?: boolean | undefined;
    disabled?: boolean | undefined;
    href?: string | undefined;
}
export interface LinkType {
    name: string;
    href?: string | undefined;
    rel?: string | undefined;
    active?: boolean | undefined;
}
export interface ListCardType {
    img: ImgType;
    field1: string;
    field2?: string | undefined;
    field3?: string | undefined;
}
export interface NavbarType {
    name: string;
    href: string;
    rel?: string | undefined;
    child?: NavbarType[] | undefined;
}
export interface PageType {
    pageNum: number;
    href: string;
}
export const xs: "xs";
export const sm: "sm";
export const md: "md";
export const lg: "lg";
export const xl: "xl";
type SizeType = "xs" | "sm" | "md" | "lg" | "xl";
type FormSizeType = "sm" | "md" | "lg";
export interface PillTabType {
    name: string;
    selected: boolean;
    href: string;
}
type ReviewType = {
    name: string;
    imgSrc: string;
    imgAlt: string;
    address: string | undefined;
    reviewDate: string | undefined;
    title: string;
    rating: number;
    item1: string | undefined;
    item2: string | undefined;
    item3: string | undefined;
};
type SelectOptionType = {
    name: string | number;
    value: string | number;
};
type SidebarType = {
    id: number;
    name: string;
    href?: string | undefined;
    icon?: typeof SvelteComponentDev | undefined;
    iconSize?: number | undefined;
    iconClass?: string | undefined;
    iconColor?: string | undefined;
    rel?: string | undefined;
    children?: SidebarType[] | undefined;
    subtext?: HTMLElement | undefined;
};
type SidebarCtaType = {
    label: string;
    text: HTMLElement;
};
export interface SiteType {
    name: string;
    href: string;
    img?: string | undefined;
}
export interface SocialMediaLinkType {
    parent: string;
    children?: LinkType[] | undefined;
}
export interface SocialMediaType {
    href: string;
    icon: typeof SvelteComponent;
    iconSize?: number | undefined;
    iconClass?: string | undefined;
}
export interface TabHeadType {
    name: string;
    id: number;
}
export interface TabType {
    name: string;
    active: boolean;
    href: string;
    rel?: string | undefined;
}
export interface TableDataHelperType {
    start: number;
    end: number;
    total: number;
}
type Textsize = "text-xs" | "text-sm" | "text-base" | "text-lg" | "text-xl" | "text-2xl" | "text-3xl" | "text-4xl";
export interface TimelineItemType {
    date: Date | string;
    title: string;
    icon?: typeof SvelteComponent | undefined;
    href?: string | undefined;
    linkname?: string | undefined;
    text?: string | HTMLElement | undefined;
}
export interface TimelineItemVerticalType {
    date: Date | string;
    title: string;
    icon?: typeof SvelteComponent | undefined;
    iconSize?: number | undefined;
    iconClass?: string | undefined;
    href?: string | undefined;
    linkname?: string | undefined;
    text?: string | HTMLElement | undefined;
}
export interface TimelineItemHorizontalType {
    date: Date | string;
    title: string;
    icon?: typeof SvelteComponent | undefined;
    iconSize?: number | undefined;
    iconClass?: string | undefined;
    text?: string | HTMLElement | undefined;
}
type ToggleColorType = "red" | "yellow" | "green" | "purple" | "blue" | "teal" | "orange";
export interface TransitionParamTypes {
    delay?: number | undefined;
    duration?: number | undefined;
    easing?: ((t: number) => number) | undefined;
    css?: ((t: number, u: number) => string) | undefined;
    tick?: ((t: number, u: number) => void) | undefined;
}
type TransitionTypes = "blur" | "fade" | "fly" | "slide" | "in:fly" | "out:fly" | "in:slide" | "out:slide" | "in:fade" | "out:fade" | "in:blur" | "out:blur";
export interface ButtonClassesTypes {
    default?: string | undefined;
    border?: string | undefined;
    application?: string | undefined;
    pagination?: string | undefined;
    group?: string | undefined;
    card?: string | undefined;
    meeting?: string | undefined;
    video?: string | undefined;
    custom?: string | undefined;
}
import { SvelteComponent } from "svelte";
export {};
